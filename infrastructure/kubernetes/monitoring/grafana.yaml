---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-credentials
  namespace: identity-matrix-monitoring
  labels:
    app: identity-matrix
    component: monitoring
    service: grafana
type: Opaque
data:
  admin-user: YWRtaW4=  # admin
  admin-password: ${GRAFANA_ADMIN_PASSWORD}  # To be replaced with actual encoded password
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: identity-matrix-monitoring
  labels:
    app: identity-matrix
    component: monitoring
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://identity-matrix-prometheus:9090
        isDefault: true
        editable: false
        version: 1
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: identity-matrix-monitoring
  labels:
    app: identity-matrix
    component: monitoring
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
      - name: 'Identity Matrix'
        orgId: 1
        folder: 'Identity Matrix'
        type: file
        disableDeletion: true
        editable: false
        options:
          path: /etc/grafana/provisioning/dashboards
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: identity-matrix-monitoring
  labels:
    app: identity-matrix
    component: monitoring
    service: grafana
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: monitoring-storage
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: identity-matrix-grafana
  namespace: identity-matrix-monitoring
  labels:
    app: identity-matrix
    component: monitoring
    service: grafana
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
    prometheus.io/path: "/metrics"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: identity-matrix
      service: grafana
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: identity-matrix
        service: grafana
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: service
                      operator: In
                      values:
                        - grafana
                topologyKey: kubernetes.io/hostname
      securityContext:
        fsGroup: 472
        runAsUser: 472
        runAsGroup: 472
      initContainers:
        - name: init-chown-data
          image: busybox:1.35
          command: ["chown", "-R", "472:472", "/var/lib/grafana"]
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
      containers:
        - name: grafana
          image: grafana/grafana:9.3.2
          ports:
            - name: http
              containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana-credentials
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-credentials
                  key: admin-password
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "false"
            - name: GF_SECURITY_ALLOW_EMBEDDING
              value: "false"
            - name: GF_INSTALL_PLUGINS
              value: "grafana-piechart-panel,grafana-worldmap-panel"
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 60
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana-dashboards
              mountPath: /etc/grafana/provisioning/dashboards
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards
---
apiVersion: v1
kind: Service
metadata:
  name: identity-matrix-grafana
  namespace: identity-matrix-monitoring
  labels:
    app: identity-matrix
    component: monitoring
    service: grafana
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: identity-matrix
    service: grafana
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: grafana-networkpolicy
  namespace: identity-matrix-monitoring
spec:
  podSelector:
    matchLabels:
      app: identity-matrix
      service: grafana
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: identity-matrix-monitoring
      ports:
        - protocol: TCP
          port: 3000
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              name: identity-matrix-monitoring
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: grafana-pdb
  namespace: identity-matrix-monitoring
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: identity-matrix
      service: grafana