version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: identity-matrix-api
    ports:
      - "3000:3000"  # API port
      - "9229:9229"  # Debug port
    volumes:
      - ./src:/app/src
      - ./package.json:/app/package.json
      - ./tsconfig.json:/app/tsconfig.json
      - ./nodemon.json:/app/nodemon.json
      - node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DEBUG_PORT=9229
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=identity_matrix
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=development
      - MONGODB_URI=mongodb://mongo:27017/identity_matrix
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - backend
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  postgres:
    image: postgres:14-alpine
    container_name: identity-matrix-postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=identity_matrix
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=development
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - backend
    restart: unless-stopped
    command: postgres -c shared_buffers=256MB -c max_connections=200
    shm_size: '256mb'

  mongo:
    image: mongo:6-jammy
    container_name: identity-matrix-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=identity_matrix
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - backend
    restart: unless-stopped
    command: mongod --wiredTigerCacheSizeGB 1.5

  redis:
    image: redis:7-alpine
    container_name: identity-matrix-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    networks:
      - backend
    restart: unless-stopped
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru

volumes:
  postgres_data:
    name: identity-matrix-postgres-data
  mongo_data:
    name: identity-matrix-mongo-data
  redis_data:
    name: identity-matrix-redis-data
  node_modules:
    name: identity-matrix-node-modules

networks:
  backend:
    name: identity-matrix-network
    driver: bridge